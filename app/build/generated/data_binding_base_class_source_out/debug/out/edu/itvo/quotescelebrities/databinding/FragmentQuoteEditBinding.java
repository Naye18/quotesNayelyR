// Generated by view binder compiler. Do not edit!
package edu.itvo.quotescelebrities.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import edu.itvo.quotescelebrities.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentQuoteEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final TextInputEditText etAuthor;

  @NonNull
  public final TextInputEditText etId;

  @NonNull
  public final TextInputEditText etQuote;

  @NonNull
  public final TextInputLayout tilAuthor;

  @NonNull
  public final TextInputLayout tilId;

  @NonNull
  public final TextInputLayout tilQuote;

  @NonNull
  public final ConstraintLayout viewContainer;

  private FragmentQuoteEditBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull TextInputEditText etAuthor, @NonNull TextInputEditText etId,
      @NonNull TextInputEditText etQuote, @NonNull TextInputLayout tilAuthor,
      @NonNull TextInputLayout tilId, @NonNull TextInputLayout tilQuote,
      @NonNull ConstraintLayout viewContainer) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etAuthor = etAuthor;
    this.etId = etId;
    this.etQuote = etQuote;
    this.tilAuthor = tilAuthor;
    this.tilId = tilId;
    this.tilQuote = tilQuote;
    this.viewContainer = viewContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentQuoteEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentQuoteEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_quote_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentQuoteEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etAuthor;
      TextInputEditText etAuthor = ViewBindings.findChildViewById(rootView, id);
      if (etAuthor == null) {
        break missingId;
      }

      id = R.id.etId;
      TextInputEditText etId = ViewBindings.findChildViewById(rootView, id);
      if (etId == null) {
        break missingId;
      }

      id = R.id.etQuote;
      TextInputEditText etQuote = ViewBindings.findChildViewById(rootView, id);
      if (etQuote == null) {
        break missingId;
      }

      id = R.id.tilAuthor;
      TextInputLayout tilAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tilAuthor == null) {
        break missingId;
      }

      id = R.id.tilId;
      TextInputLayout tilId = ViewBindings.findChildViewById(rootView, id);
      if (tilId == null) {
        break missingId;
      }

      id = R.id.tilQuote;
      TextInputLayout tilQuote = ViewBindings.findChildViewById(rootView, id);
      if (tilQuote == null) {
        break missingId;
      }

      ConstraintLayout viewContainer = (ConstraintLayout) rootView;

      return new FragmentQuoteEditBinding((ConstraintLayout) rootView, btnSave, etAuthor, etId,
          etQuote, tilAuthor, tilId, tilQuote, viewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
