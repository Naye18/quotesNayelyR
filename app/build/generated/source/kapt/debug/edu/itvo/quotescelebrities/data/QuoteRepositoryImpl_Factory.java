// Generated by Dagger (https://dagger.dev).
package edu.itvo.quotescelebrities.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import edu.itvo.quotescelebrities.data.local.QuoteLocalDataSource;
import edu.itvo.quotescelebrities.data.remote.QuoteRemoteDataSource;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuoteRepositoryImpl_Factory implements Factory<QuoteRepositoryImpl> {
  private final Provider<QuoteLocalDataSource> localDataSourceProvider;

  private final Provider<QuoteRemoteDataSource> remoteDataSourceProvider;

  public QuoteRepositoryImpl_Factory(Provider<QuoteLocalDataSource> localDataSourceProvider,
      Provider<QuoteRemoteDataSource> remoteDataSourceProvider) {
    this.localDataSourceProvider = localDataSourceProvider;
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public QuoteRepositoryImpl get() {
    return newInstance(localDataSourceProvider.get(), remoteDataSourceProvider.get());
  }

  public static QuoteRepositoryImpl_Factory create(
      Provider<QuoteLocalDataSource> localDataSourceProvider,
      Provider<QuoteRemoteDataSource> remoteDataSourceProvider) {
    return new QuoteRepositoryImpl_Factory(localDataSourceProvider, remoteDataSourceProvider);
  }

  public static QuoteRepositoryImpl newInstance(QuoteLocalDataSource localDataSource,
      QuoteRemoteDataSource remoteDataSource) {
    return new QuoteRepositoryImpl(localDataSource, remoteDataSource);
  }
}
